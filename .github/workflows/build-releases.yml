name: Build Cross-Platform Releases

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            executable_name: labubu-launcher.exe
            python_version: '3.11'
          - os: macos-latest
            platform: macos
            executable_name: labubu-launcher
            python_version: '3.11'
          - os: ubuntu-latest
            platform: linux
            executable_name: labubu-launcher
            python_version: '3.11'

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build executable with PyInstaller
      run: |
        pyinstaller launcher.spec

    - name: Create distribution package (Windows)
      if: matrix.platform == 'windows'
      shell: pwsh
      run: |
        $VERSION = "${{ github.event.inputs.version || github.ref_name }}"
        $PACKAGE_NAME = "labubu-launcher-${{ matrix.platform }}-$VERSION"
        
        New-Item -ItemType Directory -Force -Path "dist/package"
        
        # Copy executable
        Copy-Item -Path "dist/${{ matrix.executable_name }}" -Destination "dist/package/" -Recurse
        
        # Copy configuration and documentation files
        Copy-Item -Path "config.yaml" -Destination "dist/package/"
        Copy-Item -Path "requirements.txt" -Destination "dist/package/"
        Copy-Item -Path "main.py" -Destination "dist/package/"
        
        # Create archive
        Set-Location "dist"
        Get-ChildItem -Name
        
        Compress-Archive -Path "package/*" -DestinationPath "$PACKAGE_NAME.zip" -Force
        
        # Set environment variables for next steps
        echo "PACKAGE_FILE=$PACKAGE_NAME.zip" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        echo "PACKAGE_NAME=$PACKAGE_NAME" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

    - name: Create distribution package (Linux/macOS)
      if: matrix.platform != 'windows'
      shell: bash
      run: |
        VERSION="${{ github.event.inputs.version || github.ref_name }}"
        PACKAGE_NAME="labubu-launcher-${{ matrix.platform }}-${VERSION}"
        
        mkdir -p dist/package
        
        # Copy executable
        cp -r dist/${{ matrix.executable_name }} dist/package/
        chmod +x dist/package/${{ matrix.executable_name }}
        
        # Copy configuration and documentation files
        cp config.yaml dist/package/
        cp requirements.txt dist/package/
        cp main.py dist/package/
        
        # Create archive
        cd dist
        ls -lhs
        
        tar -czf ${PACKAGE_NAME}.tar.gz -C package .
        
        echo "PACKAGE_FILE=${PACKAGE_NAME}.tar.gz" >> $GITHUB_ENV
        echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_ENV

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: ${{ env.PACKAGE_NAME }}
        path: dist/${{ env.PACKAGE_FILE }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4.3.0
      with:
        path: artifacts

    - name: Prepare release files
      run: |
        mkdir -p release-files
        find artifacts -name "*.zip" -o -name "*.tar.gz" | xargs -I {} cp {} release-files/

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: release-files/*
        name: LABUBU启动器 ${{ github.event.inputs.version || github.ref_name }}
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        body: |
          版本号: ${{ github.event.inputs.version || github.ref_name }}
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
